apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-worker
  labels:
    app: superset-worker
    chart: superset-0.8.3
    release: superset
    heritage: Helm
  namespace: superset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-worker
      release: superset
  template:
    metadata:
      labels:
        app: superset-worker
        release: superset
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -wait "tcp://$REDIS_HOST:$REDIS_PORT"
          -timeout 120s
        envFrom:
        - secretRef:
            name: 'superset-env'
        image: 'jwilder/dockerize:latest'
        imagePullPolicy: 'IfNotPresent'
        name: wait-for-postgres-redis
      containers:
        - name: superset
          image: apache/superset
          imagePullPolicy: Always
          command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker"]
          env:
            - name: "SUPERSET_PORT"
              value: "8088"
          envFrom:
            - secretRef:
                name: "superset-env"
          volumeMounts:
            - name: superset-config
              mountPath: "/app/pythonpath"
              readOnly: true
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          resources:
            {}
      volumes:
        - name: superset-config
          secret:
            secretName: superset-config

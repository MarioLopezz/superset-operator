apiVersion: v1
kind: Service
metadata:
  name: superset
  namespace: default
  labels:
    app: superset
spec:
  type: NodePort
  ports:
    - port: 8088
      protocol: TCP
      name: http
  selector:
    app: superset
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset
  namespace: default
  labels:
    app: superset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset
  template:
    metadata:
      annotations:
      labels:
        app: superset
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - name: wait-for-postgres
        image: apache/superset:dockerize
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s
        envFrom:
        - secretRef:
            name: 'superset-env'
      containers:
        - name: superset
          image: docker.io/kubernetesbigdataeg/superset:4.0.0-1
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; /usr/bin/run-server.sh"]
          env:
            - name: "SUPERSET_PORT"
              value: "8088"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: superset-config
                  key: SECRET_KEY
          envFrom:
            - secretRef:
                name: "superset-env"
          volumeMounts:
            - name: superset-config
              mountPath: "/app/pythonpath"
              readOnly: true
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: superset-config
          secret:
            secretName: superset-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-worker
  namespace: default
  labels:
    app: superset-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-worker
  template:
    metadata:
      labels:
        app: superset-worker
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - name: wait-for-postgres-redis        
        image: 'apache/superset:dockerize' #comprobar esta imagen
        imagePullPolicy: 'IfNotPresent'
        command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -wait "tcp://$REDIS_HOST:$REDIS_PORT"
          -timeout 120s
        envFrom:
        - secretRef:
            name: 'superset-env'
      containers:
        - name: superset
          image: docker.io/kubernetesbigdataeg/superset:4.0.0-1
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker"]
          env:
            - name: "SUPERSET_PORT"
              value: "8088"
          envFrom:
            - secretRef:
                name: "superset-env"
          volumeMounts:
            - name: superset-config
              mountPath: "/app/pythonpath"
              readOnly: true
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
      volumes:
        - name: superset-config
          secret:
            secretName: superset-config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: superset-init-db
  namespace: default
spec:
  template:
    metadata:
      name: superset-init-db
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
      - name: wait-for-postgres
        image: 'apache/superset:dockerize'
        imagePullPolicy: 'IfNotPresent'
        command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s
        envFrom:
        - secretRef:
            name: 'superset-env'
      containers:
      - name: superset-init-db
        image: docker.io/kubernetesbigdataeg/superset:4.0.0-1
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: superset-config
              key: SECRET_KEY
        envFrom:
          - secretRef:
              name: superset-env
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: superset-config
            mountPath: "/app/pythonpath"
            readOnly: true
        command: ["/bin/sh","-c","echo $PATH;. /app/pythonpath/superset_bootstrap.sh; . /app/pythonpath/superset_init.sh"]
      volumes:
        - name: superset-config
          secret:
            secretName: superset-config
      restartPolicy: Never

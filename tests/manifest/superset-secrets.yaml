apiVersion: v1
kind: Secret
metadata:
  name: superset-env
  labels:
    app: superset
  namespace: superset
type: Opaque
stringData:
    REDIS_HOST: "superset-redis-headless.superset.svc.cluster.local"
    REDIS_PORT: "6379"
    DB_HOST: "postgresql-svc.kudu.svc.cluster.local"
    DB_PORT: "5432"
    DB_USER: "postgres"
    DB_PASS: "postgres"
    DB_NAME: "superset"
    ADMIN_USER: "admin"
    ADMIN_PASS: "admin"
    ADMIN_FIRSTNAME: "Superset"
    ADMIN_LASTNAME: "Admin"
    ADMIN_EMAIL: "admin@superset.com"
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-config
  labels:
    app: superset
  namespace: superset
type: Opaque
stringData:
  superset_config.py: |
    
    import os
    from cachelib.redis import RedisCache
    
    def env(key, default=None):
        return os.getenv(key, default)
    
    MAPBOX_API_KEY = env('MAPBOX_API_KEY', '')
    CACHE_CONFIG = {
          'CACHE_TYPE': 'redis',
          'CACHE_DEFAULT_TIMEOUT': 300,
          'CACHE_KEY_PREFIX': 'superset_',
          'CACHE_REDIS_HOST': env('REDIS_HOST'),
          'CACHE_REDIS_PORT': env('REDIS_PORT'),
          'CACHE_REDIS_PASSWORD': env('REDIS_PASSWORD'),
          'CACHE_REDIS_DB': env('REDIS_DB', 1),
    }
    DATA_CACHE_CONFIG = CACHE_CONFIG
    
    SQLALCHEMY_DATABASE_URI = f"postgresql+psycopg2://{env('DB_USER')}:{env('DB_PASS')}@{env('DB_HOST')}:{env('DB_PORT')}/{env('DB_NAME')}"
    SQLALCHEMY_TRACK_MODIFICATIONS = True
    SECRET_KEY = env('SECRET_KEY', 'thisISaSECRET_1234')

    SESSION_COOKIE_SAMESITE = "None"
    SESSION_COOKIE_SECURE = False
    SESSION_COOKIE_HTTPONLY = False

    class CeleryConfig(object):
      CELERY_IMPORTS = ('superset.sql_lab', )
      CELERY_ANNOTATIONS = {'tasks.add': {'rate_limit': '10/s'}}
      BROKER_URL = f"redis://{env('REDIS_HOST')}:{env('REDIS_PORT')}/0"
      CELERY_RESULT_BACKEND = f"redis://{env('REDIS_HOST')}:{env('REDIS_PORT')}/0"
    
    CELERY_CONFIG = CeleryConfig
    RESULTS_BACKEND = RedisCache(
          host=env('REDIS_HOST'),
          port=env('REDIS_PORT'),
          key_prefix='superset_results'
    )
    
  superset_init.sh: |
    #!/bin/sh
    set -eu
    echo "Upgrading DB schema..."
    superset db upgrade
    superset set_database_uri -d Impala -u impala://impala-master-0.impala-master-svc.default.svc.cluster.local:21050
    echo "Initializing roles..."
    superset init
    
    echo "Creating admin user..."
    superset fab create-admin \
                    --username $ADMIN_USER \
                    --firstname $ADMIN_FIRSTNAME \
                    --lastname $ADMIN_LASTNAME \
                    --email $ADMIN_EMAIL \
                    --password $ADMIN_PASS \
                    || true

    if [ -f "/app/configs/import_datasources.yaml" ]; then
      echo "Importing database connections.... "
      superset import_datasources -p /app/configs/import_datasources.yaml
    fi
  superset_bootstrap.sh: |
    #!/bin/bash
    rm -rf /var/lib/apt/lists/* && \
    pip install \
      psycopg2-binary==2.9.7 \
      redis==4.6.0 \
      impyla \
      pyhive==0.7.0 \
      sqlalchemy-solr && \
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid 0" > ~/bootstrap; fi